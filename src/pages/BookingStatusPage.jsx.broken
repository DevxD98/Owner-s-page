import React, { useState, useEffect } from 'react';
import { ArrowLeft, Ticket, Filter, Search } fr          </div>
        ) : (
          <div className="text-center py-12 border-2 border-dashed border-gray-200 rounded-lg">
            <div className="mx-auto w-20 h-20 mb-4 rounded-full bg-gray-100 flex items-center justify-center">
              <Ticket size={32} className="text-gray-400" />
            </div>
            <p className="text-gray-500 font-medium text-lg">
              {bookings.length > 0 ? 'No matches found' : 'No offer bookings yet'}
            </p>
            <p className="text-gray-400 mt-2">
              {bookings.length > 0 
                ? 'Try adjusting your filters or search terms'
                : 'When customers book any of your offers, they will appear here'}
            </p>
          </div>
        )}
      </div>
    </div>eact';
import { useNavigate } from 'react-router-dom';
import BookingStatus from '../components/bookings/BookingStatus';
import { useApp } from '../contexts/AppContext';

const BookingStatusPage = () => {
  const navigate = useNavigate();
  const { bookings } = useApp();
  const [filter, setFilter] = useState('all');
  const [searchTerm, setSearchTerm] = useState('');
  const [filteredBookings, setFilteredBookings] = useState([]);
  
  // Filter bookings based on search term and selected filter
  useEffect(() => {
    let result = [...bookings];
    
    // Apply status filter
    if (filter !== 'all') {
      result = result.filter(booking => 
        booking.status.toLowerCase() === filter.toLowerCase()
      );
    }
    
    // Apply search filter
    if (searchTerm.trim() !== '') {
      const searchTermLower = searchTerm.toLowerCase();
      result = result.filter(booking => 
        booking.customerName.toLowerCase().includes(searchTermLower) ||
        booking.offerTitle.toLowerCase().includes(searchTermLower)
      );
    }
    
    setFilteredBookings(result);
  }, [bookings, filter, searchTerm]);

  return (
    <div className="p-4 pb-20">
      <div className="flex items-center bg-gradient-to-r from-amber-500 to-orange-600 text-white p-4 rounded-lg shadow-md mb-6">
        <button onClick={() => navigate(-1)} className="mr-3 hover:bg-white/20 p-1 rounded">
          <ArrowLeft size={20} />
        </button>
        <div className="flex items-center">
          <Ticket size={24} className="mr-3" />
          <h1 className="text-xl font-bold">Offer Bookings</h1>
        </div>
      </div>

      <div className="mb-6">
        <div className="flex flex-col space-y-3">
          <div className="relative">
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <Search size={18} className="text-gray-400" />
            </div>
            <input
              type="text"
              placeholder="Search by customer name or offer..."
              className="pl-10 w-full p-2.5 border border-gray-300 rounded-lg focus:ring-amber-500 focus:border-amber-500"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>
          
          <div className="flex space-x-2 overflow-x-auto pb-2">
            <button
              onClick={() => setFilter('all')}
              className={`px-3 py-2 rounded-lg ${filter === 'all' 
                ? 'bg-amber-500 text-white' 
                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'} whitespace-nowrap`}
            >
              All Bookings
            </button>
            <button
              onClick={() => setFilter('confirmed')}
              className={`px-3 py-2 rounded-lg ${filter === 'confirmed' 
                ? 'bg-green-500 text-white' 
                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'} whitespace-nowrap`}
            >
              Confirmed
            </button>
            <button
              onClick={() => setFilter('pending')}
              className={`px-3 py-2 rounded-lg ${filter === 'pending' 
                ? 'bg-yellow-500 text-white' 
                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'} whitespace-nowrap`}
            >
              Pending
            </button>
            <button
              onClick={() => setFilter('active')}
              className={`px-3 py-2 rounded-lg ${filter === 'active' 
                ? 'bg-blue-500 text-white' 
                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'} whitespace-nowrap`}
            >
              Active
            </button>
            <button
              onClick={() => setFilter('cancelled')}
              className={`px-3 py-2 rounded-lg ${filter === 'cancelled' 
                ? 'bg-red-500 text-white' 
                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'} whitespace-nowrap`}
            >
              Cancelled
            </button>
          </div>
        </div>
      </div>

      <div className="space-y-4">
        {filteredBookings.length > 0 ? (
          filteredBookings.map((booking) => (
            <BookingStatus 
              key={booking.id}
              customerName={booking.customerName}
              offerTitle={booking.offerTitle}
              offerType={booking.offerType}
              offerImage={booking.offerImage}
              date={booking.date}
              time={booking.time}
              validTill={booking.validTill}
              status={booking.status}
            />
          ))
        ) : (
          <div className="text-center py-12 border-2 border-dashed border-gray-200 rounded-lg">
            <div className="mx-auto w-20 h-20 mb-4 rounded-full bg-gray-100 flex items-center justify-center">
              <Ticket size={32} className="text-gray-400" />
            </div>
            <p className="text-gray-500 font-medium text-lg">No offer bookings yet</p>
            <p className="text-gray-400 mt-2">When customers book any of your offers, they will appear here</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default BookingStatusPage;